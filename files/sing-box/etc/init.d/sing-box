#!/bin/sh /etc/rc.common

START=99
USE_PROCD=1

PROG=/usr/bin/sing-box
CRON_FILE=/etc/crontabs/root
RES_DIR=/etc/sing-box/
CONF=./config.json
SUB_CONF=sing-box.json

init() {
    local net_device="$(uci -q get network.lan.device)"
    local ipaddr="$(ip addr | grep inet | grep "$net_device" | awk '{print $2}' | sed 's,[^.]*/,0/,')"
    sed -i "s,192.168.1.0/24,${ipaddr},g" ${RES_DIR}nftables.conf
}

update_subscription() {
    local url="$(jq -r '.url' $RES_DIR$SUB_CONF)"
    curl --user-agent sing-box --connect-timeout 30 -m 600 -klo ${RES_DIR}1.json.new $url
    if [ $? -eq 0 ];then
        mv ${RES_DIR}1.json.new ${RES_DIR}1.json && jq -s add ${RES_DIR}1.json ${RES_DIR}template.json > ${RES_DIR}config.json
    else
        [ -f ${RES_DIR}1.json.new ] && rm -f ${RES_DIR}1.json.new
    fi
}

setcron() {
    sed -i '/init.d\/sing-box/d' $CRON_FILE 2>/dev/null
    local update_time="$(jq -r '.update_time' $RES_DIR$SUB_CONF)"
    echo "0 $update_time * * * /etc/init.d/sing-box restart" >> $CRON_FILE
    crontab $CRON_FILE
}

delcron() {
    sed -i '/init.d\/sing-box/d' $CRON_FILE 2>/dev/null
    crontab $CRON_FILE
}

start_service() {
    update_subscription
    local auto_update="$(jq -r '.auto_update' $RES_DIR$SUB_CONF)"
    [ -d ${RES_DIR}ui ] || init
    if [ $auto_update -eq 1 ]; then
        delcron ; setcron
    fi

    procd_open_instance
    procd_set_param command $PROG run -D $RES_DIR -c $CONF
    procd_set_param user root
    procd_set_param limits core="unlimited"
    procd_set_param limits nofile="1000000 1000000"
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param respawn "${respawn_threshold:-3600}" "${respawn_timeout:-5}" "${respawn_retry:-5}"
    procd_close_instance
    ip rule add fwmark 1 table 100
    ip route add local 0.0.0.0/0 dev lo table 100
    nft -f ${RES_DIR}nftables.conf
    nft add chain inet sing-box docker { type nat hook prerouting priority -100 \; }
    nft add rule inet sing-box docker ip saddr != {172.17.0.0/16} return
    echo "sing-box is started!"
}

stop_service() {
    service_stop $PROG
    ip rule del fwmark 1 table 100
    ip route del local 0.0.0.0/0 dev lo table 100
    nft delete table inet sing-box
    delcron
    echo "sing-box is stopped!"
}

reload_service() {
    stop
    sleep 2s
    echo "sing-box is restarted!"
    start
}
