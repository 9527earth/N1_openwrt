#!/bin/sh /etc/rc.common

START=99
USE_PROCD=1

NAME="sing-box"
PROG="/usr/bin/sing-box"

start_service() {
    config_load "$NAME"

    config_get_bool enabled "main" "enabled" "1"
    [ "$enabled" -eq "1" ] || return 0

    config_get user "main" "user" "root"
    config_get conffile "main" "conffile"
    config_get tempfile "main" "tempfile"
    config_get nftfile "main" "nftfile"
    config_get workdir "main" "workdir" "/etc/sing-box"
    config_get auto_update "main" "auto_update"
    config_get update_time "main" "updatet_time"
    config_get url "subscription" "url"
    config_get mixenabled "mix" "enabled" "0"
    config_get mixfile "mix" "mixfile"

    curl --user-agent sing-box --connect-timeout 30 -m 600 -klo "${workdir}/config.tmp" "$url"
    if [ "$?" -eq "0" ]; then
        if [ "$mixenabled" -eq "1" ]; then
            mv "${workdir}/config.tmp" "${workdir}/1.json" && jq -s add "${workdir}/1.json" "$tempfile" > "${workdir}/config.tmp" && jq -s add "${workdir}/config.tmp" "$mixfile" > "$conffile"
        else
            mv "${workdir}/config.tmp" "${workdir}/1.json" && jq -s add "${workdir}/1.json" "$tempfile" > "$conffile"
        fi
    fi
    [ -f "${workdir}/config.tmp" ] && rm -f "${workdir}/config.tmp"

    if [ ! -d ${workdir}/ui ]; then
        local net_device="$(uci -q get network.lan.device)"
        local ipaddr="$(ip addr | grep inet | grep "$net_device" | awk '{print $2}' | sed 's,[^.]*/,0/,')"
        sed -i "/##/,+2s,192.168.1.0/24,${ipaddr},g" "$nftfile"
    fi

    if [ "$auto_update" -eq "1" ]; then
        sed -i "/init.d\/sing-box/d" "/etc/crontabs/root" 2>/dev/null
        echo -e "0 $update_time * * * /etc/init.d/sing-box restart" >> "/etc/crontabs/root"
        /etc/init.d/cron restart
    fi

    procd_open_instance
    procd_set_param command "$PROG" run -c "$conffile" -D "$workdir"

    procd_set_param user "$user"
    procd_set_param limits core="unlimited"
    procd_set_param limits nofile="1000000 1000000"
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param respawn "${respawn_threshold:-3600}" "${respawn_timeout:-5}" "${respawn_retry:-5}"
    procd_close_instance

    ip rule add fwmark 1 table 100
    ip route add local 0.0.0.0/0 dev lo table 100
    nft -f "$nftfile"
    nft add chain inet sing-box docker { type nat hook prerouting priority -100 \; }
    nft add rule inet sing-box docker ip saddr != {172.17.0.0/16} return
    echo "sing-box is started!"
}

stop_service() {
    service_stop $PROG
    ip rule del fwmark 1 table 100
    ip route del local 0.0.0.0/0 dev lo table 100
    nft delete table inet sing-box
    sed -i "/init.d\/sing-box/d" "/etc/crontabs/root" 2>/dev/null
    /etc/init.d/cron restart
    echo "sing-box is stopped!"
}

reload_service() {
    stop
    sleep 2s
    echo "sing-box is restarted!"
    start
}
